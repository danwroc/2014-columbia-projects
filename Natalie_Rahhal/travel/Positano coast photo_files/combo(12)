YUI.add("flickr-galleries-getPhotos-fetcher",function(e){"use strict";function t(t){var n={gallery_id:t.compoundId,extras:e.APIHelper.request.getRebootPhotoExtras(),per_page:t.perPage||1,page:t.page||20,get_user_info:1,get_gallery_info:1};return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u={id:n.id,compoundId:n.compoundId};return u.owner=e.APIHelper.response.parsePerson(r.user),s.exists(u.owner.id)||s.add(u.owner),u.title=r.gallery&&r.gallery.title&&r.gallery.title.content,u.owner=s.proxy(u.owner.id),u.photoPageList=e.APIHelper.response.parsePhotos({photos:r.photos.photo,personModelRegistry:s,photoModelRegistry:i}),o.exists(u.id)?o.setValue(u.id,"photoPageList",u.photoPageList):o.add(u),u.photoPageList}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.galleries.getPhotos",this._processParams(t),!0),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("gallery-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-galleries-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-galleries-getPhotos"]={run:r,_processResponse:n,_processParams:t}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","gallery-models"]});
YUI.add("flickr-galleries-getContext-fetcher",function(e){"use strict";function t(t){var n={gallery_id:t.compoundId,photo_id:t.photoId,extras:e.APIHelper.request.getRebootPhotoExtras(),num_prev:t.numPrev,num_next:t.numNext};return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=[],a=[],f=s.proxy(n.photoId),l,c,h,p,d,v,m=[];return l=r.nextphotos,c=r.prevphotos,a=e.APIHelper.response.parsePhotos({photos:l.photo,personModelRegistry:o,photoModelRegistry:s}),u=e.APIHelper.response.parsePhotos({photos:c.photo,personModelRegistry:o,photoModelRegistry:s}),v=i.getValue(n.id,"photoContextList"),p=v.hasMinBoundary?v.hasMinBoundary():!1,d=v.hasMaxBoundary?v.hasMaxBoundary():!1,h=v.getList(),m=e.APIHelper.response.addOrReplaceListByContext({model:f,next:a,prev:u.reverse(),current:h,hasMin:p,hasMax:d,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",m),{next:a,previous:u.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.galleries.getContext",this._processParams(t),!0),n.getModelRegistry("gallery-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-galleries-getContext-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-galleries-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["gallery-models","photo-models","person-models"]});
YUI.add("flickr-groups-pools-getContext-fetcher",function(e){"use strict";function t(t){var n={photo_id:t.photoId,extras:e.APIHelper.request.getRebootPhotoExtras(),num_prev:t.numNext,num_next:t.numPrev,get_group_info:1};if(t.id)n.group_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-groups-pools-getPhotos-fetcher] `id` or `pathAlias` is required.");n.group_path_alias=t.pathAlias}return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=[],a=[],f=s.proxy(n.photoId),l,c,h,p,d,v,m=[];return l=r.prevphotos,c=r.nextphotos,a=e.APIHelper.response.parsePhotos({photos:l.photo,personModelRegistry:o,photoModelRegistry:s}),u=e.APIHelper.response.parsePhotos({photos:c.photo,personModelRegistry:o,photoModelRegistry:s}),v=i.getValue(n.id,"photoContextList"),p=v.hasMinBoundary?v.hasMinBoundary():!1,d=v.hasMaxBoundary?v.hasMaxBoundary():!1,h=v.getList(),m=e.APIHelper.response.addOrReplaceListByContext({model:f,next:a,prev:u.reverse(),current:h,hasMin:p,hasMax:d,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",m),{next:a,previous:u.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.groups.pools.getContext",this._processParams(t),!0),n.getModelRegistry("groups-pool-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-getContext-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-groups-pools-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["favorite-models","photo-models"]});
YUI.add("flickr-groups-invite-photo-invite-creator",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.invite.photo.invite",r),n.getModel("groups-pool-models",t.groupID)).then(function(e){var t=e[0],n=e[1];if(t.stat==="ok")return n},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-invite] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-invite-photo-invite"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-pools-add-creator",function(e){"use strict";function t(t,n){var r={};return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.pools.add",r),n.getModel("groups-pool-models",t.groupID),n.getModel("photo-models",t.photoID)).then(function(e){var t=e[0],n=e[1],r=e[2];if(t.stat==="ok")return n.addPhoto(r),n},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-add] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-pools-add"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-pools-remove-deletor",function(e){"use strict";function t(t,n){var r={},i=t.groupID;return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.pools.remove",r),n.getModel("groups-pool-models",i),n.getModel("photo-models",t.photoID)).then(function(e){var t=e[0],n=e[1],r=e[2];if(t.stat==="ok")return n.removePhoto(r),n},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-remove-deletor] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-pools-remove"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("flickr-groups-invite-photo-cancel-deletor",function(e){"use strict";function t(t,n){var r={},i=t.groupID;return r.photo_id=t.photoID,r.group_id=t.groupID,e.batch(n.callAPI("flickr.groups.invite.photo.cancel",r),n.getModel("groups-pool-models",i)).then(function(e){var t=e[0],n=e[1];if(t.stat==="ok")return n},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-cancel] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-invite-photo-cancel"]={run:t}},"@VERSION@",{requires:["flickr-promise"],optional:[]});
YUI.add("groups-pool-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-groups-pools-getPhotos"].run(t,this.appContext)},addPhoto:function(t,n){return e.ModelCreators["flickr-groups-pools-add"].run(t,n)},removePhoto:function(t,n){return e.ModelDeletors["flickr-groups-pools-remove"].run(t,n)},invitePhoto:function(t,n){return e.ModelCreators["flickr-groups-invite-photo-invite"].run(t,n)},cancelPhotoInvitation:function(t,n){return e.ModelDeletors["flickr-groups-invite-photo-cancel"].run(t,n)}},addPhoto:function(e,t){return this.getValue(e,"photoPageList").hasMaxBoundary()&&this.getValue(e,"photoPageList").appendToList(t),this.getValue(e,"photoContextList").hasMaxBoundary()&&this.getValue(e,"photoContextList").appendToList(t),this},removePhoto:function(e,t){return this.getValue(e,"photoPageList").removeFromList(t.getValue("id")),this.getValue(e,"photoContextList").removeFromList(t.getValue("id")),this},attributes:{displayType:{readOnly:!0,defaultFn:function(){return"group"}},title:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},isAdmin:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},photoPageList:{isCollection:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-groups-pools-getPhotos"]}},photoContextList:{isCollection:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-groups-pools-getContext"],listItemIdField:"photoId"}},url:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){return"/groups/"+e+"/"}},urlSuffix:{readOnly:!0,derivedBy:["pathAlias"],defaultFn:function(e){return"pool-"+this.getValue(e,"pathAlias")}},primary:{}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-pools-getContext-fetcher","flickr-groups-pools-getPhotos-fetcher","flickr-groups-invite-photo-invite-creator","flickr-groups-pools-add-creator","flickr-groups-pools-remove-deletor","flickr-groups-invite-photo-cancel-deletor","attribute-helpers"]});
YUI.add("flickr-groups-pools-getPhotos-fetcher",function(e){"use strict";function t(t){var n={extras:e.APIHelper.request.getRebootPhotoExtras(),per_page:t.perPage||20,page:t.page||1,get_group_info:1};if(t.id)n.group_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-groups-pools-getPhotos-fetcher] `id` or `pathAlias` is required.");n.group_path_alias=t.pathAlias}return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u={id:r.group.nsid,title:r.group.name,pathAlias:r.group.pathalias};return u.photoList=e.APIHelper.response.parsePhotos({photos:r.photos.photo,personModelRegistry:s,photoModelRegistry:i}),o.exists(u.id)?o.setValue(u.id,"photoPageList",u.photoList):o.add(u),u.photoList}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.groups.pools.getPhotos",this._processParams(t),!0),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("groups-pool-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-groups-pools-getPhotos"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","groups-pool-models"]});
